// Vertex shader
const vertexShaderSource = `
attribute vec3 vertex;
uniform mat4 ModelViewMatrix;
uniform mat4 ProjectionMatrix;
attribute vec2 textureCoords;


varying vec4 color;
uniform vec4 colorU;
varying vec2 vTextureCoords;


void main() {
  gl_Position = ProjectionMatrix * ModelViewMatrix * vec4(vertex,1.0);
  color = colorU;
  vTextureCoords = textureCoords;
}`;


// Fragment shader
const fragmentShaderSource = `
#ifdef GL_FRAGMENT_PRECISION_HIGH
   precision highp float;
#else
   precision mediump float;
#endif

varying vec4 color;
varying vec2 vTextureCoords;
uniform sampler2D tmu;
uniform vec4 colorU;

void main() {
  vec4 texture = texture2D(tmu, vTextureCoords);
  gl_FragColor = texture * color;
}`;